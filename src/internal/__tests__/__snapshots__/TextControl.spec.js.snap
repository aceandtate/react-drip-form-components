// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Internal#<TextControl /> Should be changed styled component 1`] = `
.c0 {
  box-sizing: border-box;
  display: block;
  width: 100%;
  height: 10rem;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin: 0;
  padding: 0.3em 0.7em;
  background: black;
  border-style: solid;
  border-width: 1em;
  border-color: pink;
  border-radius: 20px;
  box-shadow: 10px 10px 100px black;
  color: ivory;
  vertical-align: top;
  font-size: 1rem;
  font-family: inherit;
  line-height: 1.4;
  -webkit-transition-property: font-size,-webkit-transform;
  -webkit-transition-property: font-size,transform;
  transition-property: font-size,transform;
  -webkit-transition-duration: 100s;
  transition-duration: 100s;
  -webkit-transition-timing-function: linear;
  transition-timing-function: linear;
}

.c0:not(:disabled):hover {
  background: rgb(255,255,255);
  border-color: rgb(204,204,204);
}

.c0:not(:disabled):focus {
  outline: none;
  background: rgb(255,255,255);
  border-color: rgb(0,188,212);
  box-shadow: 0 2px 2px rgba(0,0,0,0.04) inset;
}

.c0:disabled {
  color: rgb(204,204,204);
  background: rgb(245,245,245);
  border-color: rgb(245,245,245);
  cursor: not-allowed;
}

<ThemeProvider
  theme={
    Object {
      "rdf": Object {
        "background": "black",
        "backgroundDisabled": "rgb(245, 245, 245)",
        "backgroundEnter": "rgb(255, 255, 255)",
        "backgroundError": "rgb(255, 255, 255)",
        "backgroundFocus": "rgb(255, 255, 255)",
        "borderColor": "pink",
        "borderColorDisabled": "rgb(245, 245, 245)",
        "borderColorEnter": "rgb(204, 204, 204)",
        "borderColorError": "orangered",
        "borderColorFocus": "rgb(0, 188, 212)",
        "borderRadius": "20px",
        "borderWidth": "1em",
        "boxShadow": "10px 10px 100px black",
        "boxShadowDisabled": "0 2px 2px rgba(0, 0, 0, 0.04) inset",
        "boxShadowEnter": "0 2px 2px rgba(0, 0, 0, 0.04) inset",
        "color": "ivory",
        "controlHeight": "10rem",
        "disabled": "rgb(204, 204, 204)",
        "error": "rgb(245, 0, 87)",
        "fontSize": "1rem",
        "selectArrowColor": "rgb(0, 188, 212)",
        "spinnerColor": "rgb(0, 188, 212)",
        "spinnerDuration": "500ms",
        "transitionDuration": "100s",
        "transitionProperty": "font-size, transform",
        "transitionTimingFunction": "linear",
      },
    }
  }
>
  <styled.input
    theme={
      Object {
        "rdf": Object {
          "background": "rgb(255, 255, 255)",
          "backgroundDisabled": "rgb(245, 245, 245)",
          "backgroundEnter": "rgb(255, 255, 255)",
          "backgroundError": "rgb(255, 255, 255)",
          "backgroundFocus": "rgb(255, 255, 255)",
          "borderColor": "rgb(219, 219, 219)",
          "borderColorDisabled": "rgb(245, 245, 245)",
          "borderColorEnter": "rgb(204, 204, 204)",
          "borderColorError": "rgb(245, 0, 87)",
          "borderColorFocus": "rgb(0, 188, 212)",
          "borderRadius": "3px",
          "borderWidth": "1px",
          "boxShadow": "0 0 0 transparent",
          "boxShadowDisabled": "0 2px 2px rgba(0, 0, 0, 0.04) inset",
          "boxShadowEnter": "0 2px 2px rgba(0, 0, 0, 0.04) inset",
          "color": "rgb(54, 54, 54)",
          "controlHeight": "2.7em",
          "disabled": "rgb(204, 204, 204)",
          "error": "rgb(245, 0, 87)",
          "fontSize": "1rem",
          "selectArrowColor": "rgb(0, 188, 212)",
          "spinnerColor": "rgb(0, 188, 212)",
          "spinnerDuration": "500ms",
          "transitionDuration": "110ms",
          "transitionProperty": "color, box-shadow, border",
          "transitionTimingFunction": "cubic-bezier(.25, .46, .45, .94)",
        },
      }
    }
  >
    <input
      className="c0"
    />
  </styled.input>
</ThemeProvider>
`;

exports[`Internal#<TextControl /> Should be changed styled component 2`] = `
.c0 {
  box-sizing: border-box;
  display: block;
  width: 100%;
  height: 10rem;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin: 0;
  padding: 0.3em 0.7em;
  background: black;
  border-style: solid;
  border-width: 1em;
  border-color: orangered;
  border-radius: 20px;
  box-shadow: 10px 10px 100px black;
  color: ivory;
  vertical-align: top;
  font-size: 1rem;
  font-family: inherit;
  line-height: 1.4;
  -webkit-transition-property: font-size,-webkit-transform;
  -webkit-transition-property: font-size,transform;
  transition-property: font-size,transform;
  -webkit-transition-duration: 100s;
  transition-duration: 100s;
  -webkit-transition-timing-function: linear;
  transition-timing-function: linear;
}

.c0:not(:disabled):hover {
  background: rgb(255,255,255);
  border-color: orangered;
}

.c0:not(:disabled):focus {
  outline: none;
  background: rgb(255,255,255);
  border-color: orangered;
  box-shadow: 0 2px 2px rgba(0,0,0,0.04) inset;
}

.c0:disabled {
  color: rgb(204,204,204);
  background: rgb(245,245,245);
  border-color: rgb(245,245,245);
  cursor: not-allowed;
}

<ThemeProvider
  theme={
    Object {
      "rdf": Object {
        "background": "black",
        "backgroundDisabled": "rgb(245, 245, 245)",
        "backgroundEnter": "rgb(255, 255, 255)",
        "backgroundError": "rgb(255, 255, 255)",
        "backgroundFocus": "rgb(255, 255, 255)",
        "borderColor": "pink",
        "borderColorDisabled": "rgb(245, 245, 245)",
        "borderColorEnter": "rgb(204, 204, 204)",
        "borderColorError": "orangered",
        "borderColorFocus": "rgb(0, 188, 212)",
        "borderRadius": "20px",
        "borderWidth": "1em",
        "boxShadow": "10px 10px 100px black",
        "boxShadowDisabled": "0 2px 2px rgba(0, 0, 0, 0.04) inset",
        "boxShadowEnter": "0 2px 2px rgba(0, 0, 0, 0.04) inset",
        "color": "ivory",
        "controlHeight": "10rem",
        "disabled": "rgb(204, 204, 204)",
        "error": "rgb(245, 0, 87)",
        "fontSize": "1rem",
        "selectArrowColor": "rgb(0, 188, 212)",
        "spinnerColor": "rgb(0, 188, 212)",
        "spinnerDuration": "500ms",
        "transitionDuration": "100s",
        "transitionProperty": "font-size, transform",
        "transitionTimingFunction": "linear",
      },
    }
  }
>
  <styled.input
    error="has error"
    theme={
      Object {
        "rdf": Object {
          "background": "rgb(255, 255, 255)",
          "backgroundDisabled": "rgb(245, 245, 245)",
          "backgroundEnter": "rgb(255, 255, 255)",
          "backgroundError": "rgb(255, 255, 255)",
          "backgroundFocus": "rgb(255, 255, 255)",
          "borderColor": "rgb(219, 219, 219)",
          "borderColorDisabled": "rgb(245, 245, 245)",
          "borderColorEnter": "rgb(204, 204, 204)",
          "borderColorError": "rgb(245, 0, 87)",
          "borderColorFocus": "rgb(0, 188, 212)",
          "borderRadius": "3px",
          "borderWidth": "1px",
          "boxShadow": "0 0 0 transparent",
          "boxShadowDisabled": "0 2px 2px rgba(0, 0, 0, 0.04) inset",
          "boxShadowEnter": "0 2px 2px rgba(0, 0, 0, 0.04) inset",
          "color": "rgb(54, 54, 54)",
          "controlHeight": "2.7em",
          "disabled": "rgb(204, 204, 204)",
          "error": "rgb(245, 0, 87)",
          "fontSize": "1rem",
          "selectArrowColor": "rgb(0, 188, 212)",
          "spinnerColor": "rgb(0, 188, 212)",
          "spinnerDuration": "500ms",
          "transitionDuration": "110ms",
          "transitionProperty": "color, box-shadow, border",
          "transitionTimingFunction": "cubic-bezier(.25, .46, .45, .94)",
        },
      }
    }
  >
    <input
      className="c0"
    />
  </styled.input>
</ThemeProvider>
`;

exports[`Internal#<TextControl /> Should be styled component 1`] = `
.c0 {
  box-sizing: border-box;
  display: block;
  width: 100%;
  height: 2.7em;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin: 0;
  padding: 0.3em 0.7em;
  background: rgb(255,255,255);
  border-style: solid;
  border-width: 1px;
  border-color: rgb(219,219,219);
  border-radius: 3px;
  box-shadow: 0 0 0 transparent;
  color: rgb(54,54,54);
  vertical-align: top;
  font-size: 1rem;
  font-family: inherit;
  line-height: 1.4;
  -webkit-transition-property: color,box-shadow,border;
  transition-property: color,box-shadow,border;
  -webkit-transition-duration: 110ms;
  transition-duration: 110ms;
  -webkit-transition-timing-function: cubic-bezier(.25,.46,.45,.94);
  transition-timing-function: cubic-bezier(.25,.46,.45,.94);
}

.c0:not(:disabled):hover {
  background: rgb(255,255,255);
  border-color: rgb(204,204,204);
}

.c0:not(:disabled):focus {
  outline: none;
  background: rgb(255,255,255);
  border-color: rgb(0,188,212);
  box-shadow: 0 2px 2px rgba(0,0,0,0.04) inset;
}

.c0:disabled {
  color: rgb(204,204,204);
  background: rgb(245,245,245);
  border-color: rgb(245,245,245);
  cursor: not-allowed;
}

<input
  className="c0"
/>
`;

exports[`Internal#<TextControl /> Should be styled component 2`] = `
.c0 {
  box-sizing: border-box;
  display: block;
  width: 100%;
  height: 2.7em;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin: 0;
  padding: 0.3em 0.7em;
  background: rgb(255,255,255);
  border-style: solid;
  border-width: 1px;
  border-color: rgb(245,0,87);
  border-radius: 3px;
  box-shadow: 0 0 0 transparent;
  color: rgb(54,54,54);
  vertical-align: top;
  font-size: 1rem;
  font-family: inherit;
  line-height: 1.4;
  -webkit-transition-property: color,box-shadow,border;
  transition-property: color,box-shadow,border;
  -webkit-transition-duration: 110ms;
  transition-duration: 110ms;
  -webkit-transition-timing-function: cubic-bezier(.25,.46,.45,.94);
  transition-timing-function: cubic-bezier(.25,.46,.45,.94);
}

.c0:not(:disabled):hover {
  background: rgb(255,255,255);
  border-color: rgb(245,0,87);
}

.c0:not(:disabled):focus {
  outline: none;
  background: rgb(255,255,255);
  border-color: rgb(245,0,87);
  box-shadow: 0 2px 2px rgba(0,0,0,0.04) inset;
}

.c0:disabled {
  color: rgb(204,204,204);
  background: rgb(245,245,245);
  border-color: rgb(245,245,245);
  cursor: not-allowed;
}

<input
  className="c0"
/>
`;
